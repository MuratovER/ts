"use strict";window.onload=function(){const e=document.querySelector(".tree--container"),t=document.querySelector(".tree--root--lists"),r=document.querySelector(".tree--crown--flex"),s=(document.querySelectorAll(".tree--crown--item"),document.querySelectorAll(".tree--crown--item--btn")),l=document.querySelectorAll(".tree-sphere--form"),i=document.querySelectorAll(".tree--crown--item--branch"),a=document.querySelectorAll(".tree--crown--item--test"),c=document.querySelector(".clear"),n=document.querySelectorAll(".tree-crown-sphere");let o={1:{1:"Самодисциплина",2:"Цели в жизни",3:"Что это такое?",4:"Изменение",5:"Самооценка"},2:{1:"Школа",2:"Иностанный язык",3:"Эффективные коммуникации",4:"Мышление",5:"Планирование времени",6:"Эффективность"},3:{1:"Прaвильное питание",2:"Здоровый сон",3:"Движение и закаливание",4:"“Ладим” со стрессом"},4:{1:"Конфликты",2:"Друзья",3:"Умение общаться",4:"Отношения в семье"}},d={1:{1:"/first/first_chapters_self_discipline/",2:"/first/first_chapters_aims_in_life/",3:"/first/first_chapters_what_is_it/",4:"/first/first_chapters_edit/",5:"/first/first_chapters_self_assessment/"},2:{1:"/second/second_chapters_AimofLearning/",2:"/second/second_chapters_ForeignLanguage/",3:"/second/second_chapters_EfficientСommunications/",4:"/second/second_chapters_Thoughts/",5:"/second/second_chapters_ControlofTime/",6:"/second/second_chapters_ControlofTimeEfficiency/"},3:{1:"/third/third_chapters_GoodNutrition/",2:"/third/third_chapters_HealthySleep/",3:"/third/third_chapters_MovementandHardening/",4:"/third/third_chapters_LadieswithStress/"},4:{1:"/fourth/fourth_chapters_Conflicts/",2:"/fourth/fourth_chapters_Friends/",3:"/fourth/fourth_chapters_AbilitytoCommunicate/",4:"/fourth/fourth_chapters_RelationshipsintheFamily/"}};c.addEventListener("click",e=>{location.reload(),localStorage.clear()});const h=(r,s,l)=>{let a=(e=>{let t=0;for(var r in o[e])t++;return t})(l);i.forEach((e,t)=>{e=e.classList.value;if(+e[e.length-1]==l){r.insertAdjacentHTML("afterEnd",`<div class="tree--crown--item--branch  tree--crown--item--branch-${l}">
                    <img src="../../static/mainsite/images/tree/lesson${l}-branch.png" alt=""
                    class='tree--crown--item--branch--img tree--crown--item--branch--img--${l}'>
                </div>`);let t=r.parentElement.querySelector(".tree--crown--item--branch");for(let e=1;e<=a;e++)t.insertAdjacentHTML("beforeend",`<a id='branch-${l}-lesson-${e}' href='${d[l][e]}'class="tree--branch--lesson tree--branch--lesson-${e}">
                        <div class="tree--branch--lesson--border">
                            ${o[l][e]}
                        </div>
                    </a>`);let e=t.querySelectorAll(".tree--branch--lesson--border");s%2!=l%2&&(t.style.transform="matrix(-1, 0, 0, 1, 0, 0)",e.forEach(e=>{e.style.transform="rotateY(180deg)"}))}})},m=(s,l,e)=>{e&&a.forEach((e,t)=>{var r=e.lastElementChild.textContent;+r[r.length-1]==s&&(e.lastElementChild.setAttribute("href",`http://127.0.0.1:8000/test${l}/#`),e.classList.remove("test--disabled"))})},f=e=>{var t,r=e.slice(1,2)+e.slice(3,4)+e.slice(5,6)+e.slice(7,8);let l=0;for(t of e.slice(0,1)+e.slice(2,3)+e.slice(4,5)+e.slice(6,7)){l++;let e=1;for(let s of r){if(l==e){let r=document.querySelector(`.tree-crown-sphere-${+t}`),e=r.querySelector(`.sphere--name-${s}`);e.setAttribute("selected",!0),n.forEach((t,e)=>{if(r!=t){let e=t.querySelector(`.sphere--name-${s}`);e.setAttribute("disabled",!0)}})}e++}1==t&&n[2].setAttribute("disabled","disabled"),2==t&&n[0].setAttribute("disabled","disabled"),3==t&&n[3].setAttribute("disabled","disabled"),4==t&&n[1].setAttribute("disabled","disabled")}},p=(t,r,s,l)=>{for(let e of t.slice(0,1)+t.slice(2,3)+t.slice(4,5)+t.slice(6,7))r.forEach(()=>{1==+e&&r[2].classList.add(s),2==+e&&r[0].classList.add(s),3==+e&&r[3].classList.add(s),4==+e&&r[1].classList.add(s),l&&(r[0].style.marginRight="40px",r[1].style.marginRight="40px")})};var g;localStorage.hasOwnProperty("crownContent")?(t.classList.add("displayNone"),r.classList.add("tree--crown--flex-active"),localStorage.hasOwnProperty("branchArr")?(g=String(JSON.parse(localStorage.getItem("branchArr"))),p(g,s,"displayNone",!1),p(g,l,"displayFlex",!0),(e=>{let s=e.slice(1,2)+e.slice(3,4)+e.slice(5,6)+e.slice(7,8),l=e.slice(0,1)+e.slice(2,3)+e.slice(4,5)+e.slice(6,7),a=-1;for(let r of s)i.forEach((e,t)=>{Number(r)===++t&&(a++,t=document.querySelector(`.tree-sphere--form-${+l[a]}`),h(t,l[a],s[a]),m(s[a],l[a],!0))})})(g),f(g)):console.log("такого свойства нет")):console.log("такого свойства нет"),n.forEach((e,t)=>{e.parentElement.parentElement.matches(".tree--crown--item-left")?e.style.borderRight="20px solid #5EA2FF":(e.style.borderLeft="20px solid #5EA2FF",e.dir="rtl")}),s.forEach(e=>{e.parentElement.matches(".tree--crown--item-left")?(e.style.marginRight="40px",e.style.marginLeft="0px"):(e.style.marginLeft="40px",e.style.marginRight="0px")}),e.addEventListener("click",e=>{let l=e.target;l==t&&(t.classList.add("displayNone"),r.classList.add("tree--crown--flex-active"),localStorage.crownContent="show"),l.matches(".tree--crown--item--btn")&&s.forEach((t,e)=>{if(t==l){let e=t.nextElementSibling.classList.value;parseInt(e.replace(/\D+/g,""));t.classList.add("displayNone"),t.nextElementSibling.parentElement.matches(".tree--crown--item-right")?t.nextElementSibling.style.marginLeft="40px":t.nextElementSibling.style.marginRight="40px",t.nextElementSibling.classList.add("displayFlex")}}),l.matches(".tree-crown-sphere")&&l.addEventListener("change",()=>{let t=l.selectedIndex,e=l.parentElement.classList.value,r=parseInt(e.replace(/\D+/g,""));if(h(l.parentElement,r,t),localStorage.hasOwnProperty("branchArr")){let e=localStorage.getItem("branchArr");e=e+r+""+t,e=e.replace(/\\+/gi,"").replace(/\"+/gi,""),localStorage.branchArr=JSON.stringify(e)}else localStorage.branchArr=JSON.stringify(r+""+t);m(r,t,!0);var s=String(JSON.parse(localStorage.getItem("branchArr")));f(s),l.setAttribute("disabled","disabled")})})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5qcyIsInNvdXJjZXMiOlsidHJlZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcclxuLypcclxuVE9ET1xyXG7Qt9Cw0LHQu9C+0LrQuNGA0L7QstCw0YLRjCDRg9GA0L7QutC4INC/0L7QutCwINC/0YDQtdC00YvQtNGD0YnQuNC5INGD0YDQvtC6INC90LUg0L/RgNC+0LnQtNC10L1cclxu0L/RgNC4INC90LDQstC10LTQtdC90LjQuCDQvdCwINC30LDQsdC70L7QutC40YDQvtCy0LDQvdC90YPRjiDRgdGE0LXRgNGDINC/0L7QtNGB0LrQsNC30YvQstCw0YLRjCwg0YfRgtC+INC+0L0g0LfQsNCx0LvQvtGH0LXQvVxyXG5cclxu0LTQu9GPINC00LXRgNC10LLQsCDQv9C+0LvRg9GH0LDRgtGMINC00LDQvdC90YvQtSDQuNC3INCx0LQg0YXRgNCw0L3QuNGC0Ywg0LIg0LrRjdGI0LVcclxu0L/RgNC4INC+0LHQvdC+0LLQu9C10L3QuNC4INCyINCR0JQg0L7QsdC90L7QstC70Y/RgtGMINC60Y3RiFxyXG5cclxu0LTQu9GPINGC0LXRgdGC0LAg0LIg0LHRg9C00YPRidC10Lwg0L/QvtC70YPRh9Cw0YLRjCDRg9GB0LvQvtCy0LjQtSDQuNC3INCx0LQg0YfRgtC+INCy0YHQtSDQu9C10LrRhtC40Lgg0Lgg0LTQtyDQv9GA0L7QudC00LXQvdGLXHJcbtC00LvRjyDQvtC/0YLQuNC+0L0g0YPRgdGC0LDQvdC+0LLQuNGC0Ywgc2VsZWN0ZWQg0LjQtyDQutGN0YjQsFxyXG4qL1xyXG5cclxuXHJcbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHsgXHJcbiAgICBjb25zdCB0cmVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRyZWUtLWNvbnRhaW5lcicpLFxyXG4gICAgICAgIHJvb3RMaXN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50cmVlLS1yb290LS1saXN0cycpLFxyXG4gICAgICAgIGNyb3duQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50cmVlLS1jcm93bi0tZmxleCcpLFxyXG4gICAgICAgIGNyb3duSXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50cmVlLS1jcm93bi0taXRlbScpLFxyXG4gICAgICAgIGNob29zZVNwaGVyZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50cmVlLS1jcm93bi0taXRlbS0tYnRuJyksXHJcbiAgICAgICAgc3BoZXJlRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50cmVlLXNwaGVyZS0tZm9ybScpLFxyXG4gICAgICAgIGNyb3duQnJhbmNoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRyZWUtLWNyb3duLS1pdGVtLS1icmFuY2gnKSxcclxuICAgICAgICBjcm93blRlc3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRyZWUtLWNyb3duLS1pdGVtLS10ZXN0JyksXHJcbiAgICAgICAgY2xlYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xlYXInKSxcclxuICAgICAgIHNlbGVjdEl0ZW1TcGhlcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudHJlZS1jcm93bi1zcGhlcmUnKTtcclxuXHJcbiAgICBsZXQgbGVzc29uc09iaiA9IHtcclxuICAgICAgICAxOiB7XHJcbiAgICAgICAgICAgIDE6IFwi0KHQsNC80L7QtNC40YHRhtC40L/Qu9C40L3QsFwiLFxyXG4gICAgICAgICAgICAyOiBcItCm0LXQu9C4INCyINC20LjQt9C90LhcIixcclxuICAgICAgICAgICAgMzogXCLQp9GC0L4g0Y3RgtC+INGC0LDQutC+0LU/XCIsXHJcbiAgICAgICAgICAgIDQ6IFwi0JjQt9C80LXQvdC10L3QuNC1XCIsXHJcbiAgICAgICAgICAgIDU6IFwi0KHQsNC80L7QvtGG0LXQvdC60LBcIixcclxuICAgICAgICB9LFxyXG4gICAgICAgIDI6IHtcclxuICAgICAgICAgICAgMTogXCLQqNC60L7Qu9CwXCIsXHJcbiAgICAgICAgICAgIDI6IFwi0JjQvdC+0YHRgtCw0L3QvdGL0Lkg0Y/Qt9GL0LpcIixcclxuICAgICAgICAgICAgMzogXCLQrdGE0YTQtdC60YLQuNCy0L3Ri9C1INC60L7QvNC80YPQvdC40LrQsNGG0LjQuFwiLFxyXG4gICAgICAgICAgICA0OiBcItCc0YvRiNC70LXQvdC40LVcIixcclxuICAgICAgICAgICAgNTogXCLQn9C70LDQvdC40YDQvtCy0LDQvdC40LUg0LLRgNC10LzQtdC90LhcIixcclxuICAgICAgICAgICAgNjogXCLQrdGE0YTQtdC60YLQuNCy0L3QvtGB0YLRjFwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgMzoge1xyXG4gICAgICAgICAgICAxOiBcItCf0YBh0LLQuNC70YzQvdC+0LUg0L/QuNGC0LDQvdC40LVcIixcclxuICAgICAgICAgICAgMjogXCLQl9C00L7RgNC+0LLRi9C5INGB0L7QvVwiLFxyXG4gICAgICAgICAgICAzOiBcItCU0LLQuNC20LXQvdC40LUg0Lgg0LfQsNC60LDQu9C40LLQsNC90LjQtVwiLFxyXG4gICAgICAgICAgICA0OiBcIuKAnNCb0LDQtNC40LzigJ0g0YHQviDRgdGC0YDQtdGB0YHQvtC8XCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICA0OiB7XHJcbiAgICAgICAgICAgIDE6IFwi0JrQvtC90YTQu9C40LrRgtGLXCIsXHJcbiAgICAgICAgICAgIDI6IFwi0JTRgNGD0LfRjNGPXCIsXHJcbiAgICAgICAgICAgIDM6IFwi0KPQvNC10L3QuNC1INC+0LHRidCw0YLRjNGB0Y9cIixcclxuICAgICAgICAgICAgNDogXCLQntGC0L3QvtGI0LXQvdC40Y8g0LIg0YHQtdC80YzQtVwiLFxyXG4gICAgICAgIH1cclxuICAgIH0sIFxyXG5cclxuICAgIGxlc3NvbnNMaW5rc09iaiA9IHtcclxuICAgICAgICAxOiB7XHJcbiAgICAgICAgICAgIDE6IFwiL2ZpcnN0L2ZpcnN0X2NoYXB0ZXJzX3NlbGZfZGlzY2lwbGluZS9cIixcclxuICAgICAgICAgICAgMjogXCIvZmlyc3QvZmlyc3RfY2hhcHRlcnNfYWltc19pbl9saWZlL1wiLFxyXG4gICAgICAgICAgICAzOiBcIi9maXJzdC9maXJzdF9jaGFwdGVyc193aGF0X2lzX2l0L1wiLFxyXG4gICAgICAgICAgICA0OiBcIi9maXJzdC9maXJzdF9jaGFwdGVyc19lZGl0L1wiLFxyXG4gICAgICAgICAgICA1OiBcIi9maXJzdC9maXJzdF9jaGFwdGVyc19zZWxmX2Fzc2Vzc21lbnQvXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICAyOiB7XHJcbiAgICAgICAgICAgIDE6IFwiL3NlY29uZC9zZWNvbmRfY2hhcHRlcnNfQWltb2ZMZWFybmluZy9cIixcclxuICAgICAgICAgICAgMjogXCIvc2Vjb25kL3NlY29uZF9jaGFwdGVyc19Gb3JlaWduTGFuZ3VhZ2UvXCIsXHJcbiAgICAgICAgICAgIDM6IFwiL3NlY29uZC9zZWNvbmRfY2hhcHRlcnNfRWZmaWNpZW500KFvbW11bmljYXRpb25zL1wiLFxyXG4gICAgICAgICAgICA0OiBcIi9zZWNvbmQvc2Vjb25kX2NoYXB0ZXJzX1Rob3VnaHRzL1wiLFxyXG4gICAgICAgICAgICA1OiBcIi9zZWNvbmQvc2Vjb25kX2NoYXB0ZXJzX0NvbnRyb2xvZlRpbWUvXCIsXHJcbiAgICAgICAgICAgIDY6IFwiL3NlY29uZC9zZWNvbmRfY2hhcHRlcnNfQ29udHJvbG9mVGltZUVmZmljaWVuY3kvXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICAzOiB7XHJcbiAgICAgICAgICAgIDE6IFwiL3RoaXJkL3RoaXJkX2NoYXB0ZXJzX0dvb2ROdXRyaXRpb24vXCIsXHJcbiAgICAgICAgICAgIDI6IFwiL3RoaXJkL3RoaXJkX2NoYXB0ZXJzX0hlYWx0aHlTbGVlcC9cIixcclxuICAgICAgICAgICAgMzogXCIvdGhpcmQvdGhpcmRfY2hhcHRlcnNfTW92ZW1lbnRhbmRIYXJkZW5pbmcvXCIsXHJcbiAgICAgICAgICAgIDQ6IFwiL3RoaXJkL3RoaXJkX2NoYXB0ZXJzX0xhZGllc3dpdGhTdHJlc3MvXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICA0OiB7XHJcbiAgICAgICAgICAgIDE6IFwiL2ZvdXJ0aC9mb3VydGhfY2hhcHRlcnNfQ29uZmxpY3RzL1wiLFxyXG4gICAgICAgICAgICAyOiBcIi9mb3VydGgvZm91cnRoX2NoYXB0ZXJzX0ZyaWVuZHMvXCIsXHJcbiAgICAgICAgICAgIDM6IFwiL2ZvdXJ0aC9mb3VydGhfY2hhcHRlcnNfQWJpbGl0eXRvQ29tbXVuaWNhdGUvXCIsXHJcbiAgICAgICAgICAgIDQ6IFwiL2ZvdXJ0aC9mb3VydGhfY2hhcHRlcnNfUmVsYXRpb25zaGlwc2ludGhlRmFtaWx5L1wiLFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNsZWFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAgLy/Qv9C+0LTRgdGH0LXRgiDQutC+0Lst0LLQviDRg9GA0L7QutC+0LIg0LIg0YLQtdC80LVcclxuICAgICBjb25zdCBsZXNzb25Db3VudGVyID0gKGkpID0+IHtcclxuICAgICAgICBsZXQgY291bnRlciA9IDA7XHJcbiAgICAgICAgZm9yIChsZXQgayBpbiBsZXNzb25zT2JqW2ldKSB7XHJcbiAgICAgICAgICAgIGNvdW50ZXIrKztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBjb3VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC8v0L/QvtC60LDQtyDQvdGD0LbQvdC+0Lkg0LLQtdGC0LrQuFxyXG4gICAgY29uc3Qgc2hvd0JyYW5jaCA9IChmb3JtSXRlbSwgZm9ybUluZGV4LCBzcGhlcmVJbmRleCkgPT4ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBsZXNzb25Db3VudCA9IGxlc3NvbkNvdW50ZXIoc3BoZXJlSW5kZXgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNyb3duQnJhbmNoLmZvckVhY2goKGl0ZW0sIGkpID0+IHtcclxuICAgICAgICAgICAgbGV0IGJyYW5jaENsYXNzID0gaXRlbS5jbGFzc0xpc3QudmFsdWUsXHJcbiAgICAgICAgICAgICAgICBicmFuY2hJbmRleCA9ICticmFuY2hDbGFzc1ticmFuY2hDbGFzcy5sZW5ndGggLSAxXTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKGJyYW5jaEluZGV4ID09IHNwaGVyZUluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGZvcm1JdGVtLmluc2VydEFkamFjZW50SFRNTChcImFmdGVyRW5kXCIsIFxyXG4gICAgICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJ0cmVlLS1jcm93bi0taXRlbS0tYnJhbmNoICB0cmVlLS1jcm93bi0taXRlbS0tYnJhbmNoLSR7c3BoZXJlSW5kZXh9XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIuLi8uLi9zdGF0aWMvbWFpbnNpdGUvaW1hZ2VzL3RyZWUvbGVzc29uJHtzcGhlcmVJbmRleH0tYnJhbmNoLnBuZ1wiIGFsdD1cIlwiXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M9J3RyZWUtLWNyb3duLS1pdGVtLS1icmFuY2gtLWltZyB0cmVlLS1jcm93bi0taXRlbS0tYnJhbmNoLS1pbWctLSR7c3BoZXJlSW5kZXh9Jz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PmApO1xyXG5cclxuICAgICAgICAgICAgICAgIGxldCBicmFuY2ggPSBmb3JtSXRlbS5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy50cmVlLS1jcm93bi0taXRlbS0tYnJhbmNoJyk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8vIGFkZCBsaW5rcyB0byBsZXNzb25zIGhlcmVcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IGxlc3NvbkNvdW50OyBpKyspXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJhbmNoLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgXHJcbiAgICAgICAgICAgICAgICAgICAgYDxhIGlkPSdicmFuY2gtJHtzcGhlcmVJbmRleH0tbGVzc29uLSR7aX0nIGhyZWY9JyR7bGVzc29uc0xpbmtzT2JqW3NwaGVyZUluZGV4XVtpXX0nY2xhc3M9XCJ0cmVlLS1icmFuY2gtLWxlc3NvbiB0cmVlLS1icmFuY2gtLWxlc3Nvbi0ke2l9XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0cmVlLS1icmFuY2gtLWxlc3Nvbi0tYm9yZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAke2xlc3NvbnNPYmpbc3BoZXJlSW5kZXhdW2ldfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8L2E+YCk7IFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gXHJcbiAgICAgICAgICAgIGxldCBicmFuY2hMZXNzb25zID0gYnJhbmNoLnF1ZXJ5U2VsZWN0b3JBbGwoJy50cmVlLS1icmFuY2gtLWxlc3Nvbi0tYm9yZGVyJyk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy/QuNC30LzQtdC90LXQvdC40LUg0L7RgtC+0LHRgNCw0LbQtdC90LjRjyDQstC10YLQutC4IFxyXG4gICAgICAgICAgICBpZiAoKGZvcm1JbmRleCAlIDIpICE9IChzcGhlcmVJbmRleCAlIDIpKSB7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGZvcm1JbmRleCwgc3BoZXJlSW5kZXgsICfQndCVINGB0L7QstC/0LDQtNCw0Y7RgicpO1xyXG5cclxuICAgICAgICAgICAgICAgIGJyYW5jaC5zdHlsZS50cmFuc2Zvcm0gPSAnbWF0cml4KC0xLCAwLCAwLCAxLCAwLCAwKSc7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8v0LjQt9C80LXQvdC10L3QuNC1INC+0YLQvtCx0YDQsNC20LXQvdC40Y8g0YLQtdC60YHRgtCwINC/0L7RgdC70LUg0L7RgtGA0LDQttC10L3QuNGPINCy0LXRgtC60LhcclxuICAgICAgICAgICAgICAgIGJyYW5jaExlc3NvbnMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZVkoMTgwZGVnKSc7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgLy/Qv9C+0LrQsNC3INC90YPQttC+0LPQviDRgtC10YHRgtCwXHJcbiAgICBjb25zdCBzaG93VGVzdCA9IChmb3JtSW5kZXgsIHNwaGVyZUluZGV4LCBzdGF0dXMpID0+IHtcclxuICAgICAgICAvL3N0YXR1cyDQv9C10YDQtdC80LXQvdC90LDRjyDQvtGCINCx0LQg0L4g0L/RgNC+0YXQvtC20LTQtdC90LjQuCDQstGB0LXRhSDRg9GA0L7QutC+0LJcclxuICAgICAgICBpZiAoIXN0YXR1cykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGNyb3duVGVzdHMuZm9yRWFjaCgoaXRlbSwgaSkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgdGVzdFR4dCA9IGl0ZW0ubGFzdEVsZW1lbnRDaGlsZC50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgICAgIHRlc3RJbmRleCA9ICt0ZXN0VHh0W3Rlc3RUeHQubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKHRlc3RJbmRleCA9PSBmb3JtSW5kZXgpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW0ubGFzdEVsZW1lbnRDaGlsZC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBgaHR0cDovLzEyNy4wLjAuMTo4MDAwL3Rlc3Qke3NwaGVyZUluZGV4fS8jYCk7XHJcbiAgICAgICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ3Rlc3QtLWRpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL9Cx0LvQvtC60LjRgNC+0LLQutCwINGA0LDQvdC10LUg0LLRi9Cx0YDQsNC90L3Ri9GFINGC0LXQvFxyXG4gICAgY29uc3QgZGlzYWJsZVNwaGVyZSA9IChnZXRBcnIpID0+IHtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgb3B0aW9uQXJyID0gZ2V0QXJyLnNsaWNlKDEsMikgKyBnZXRBcnIuc2xpY2UoMyw0KSArIGdldEFyci5zbGljZSg1LDYpICsgZ2V0QXJyLnNsaWNlKDcsOCk7XHJcbiAgICAgICAgbGV0IGZvcm1BcnIgPSBnZXRBcnIuc2xpY2UoMCwxKSArIGdldEFyci5zbGljZSgyLDMpICsgZ2V0QXJyLnNsaWNlKDQsNSkgKyBnZXRBcnIuc2xpY2UoNiw3KTtcclxuICAgICAgICBsZXQgayA9IDA7XHJcbiAgICBcclxuICAgICAgICBmb3IgKGxldCBmb3JtQ2hhciBvZiBmb3JtQXJyKSB7XHJcbiAgICAgICAgICAgIGsrKztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCBsID0gMTtcclxuICAgICAgICAgICAgZm9yIChsZXQgb3B0aW9uQ2hhciBvZiBvcHRpb25BcnIpIHtcclxuICAgICAgICAgICAgICAgIGlmICAoayA9PSBsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNwaGVyZVNlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC50cmVlLWNyb3duLXNwaGVyZS0keytmb3JtQ2hhcn1gKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uID0gc3BoZXJlU2VsZWN0LnF1ZXJ5U2VsZWN0b3IoYC5zcGhlcmUtLW5hbWUtJHtvcHRpb25DaGFyfWApO1xyXG4gICAgICAgICAgICAgICAgICAgIC8v0LLRi9Cy0L7QtCDQstGL0LHRgNCw0L3QvdC+0Lkg0YHRhNC10YDRiyDRgNCw0LfQstC40YLQuNGPXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZSgnc2VsZWN0ZWQnLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICAvL9Cx0LvQvtC60LjRgNC+0LLQutCwINGB0YTQtdGA0Ysg0YMg0LTRgNGD0LPQuNGFINCy0LXRgtC+0LpcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RJdGVtU3BoZXJlLmZvckVhY2goKGl0ZW0sIGkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwaGVyZVNlbGVjdCAhPSBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgY2hvc2VuT3B0aW9uID0gaXRlbS5xdWVyeVNlbGVjdG9yKGAuc3BoZXJlLS1uYW1lLSR7b3B0aW9uQ2hhcn1gKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNob3Nlbk9wdGlvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgICAgIGwrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL9Cx0LvQvtC60LjRgNC+0LLQutCwINCy0YHQtdCz0L4gc2VsZWN0YVxyXG4gICAgICAgICAgICBpZiAoZm9ybUNoYXIgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0SXRlbVNwaGVyZVsyXS5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XHJcblxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgaWYgKGZvcm1DaGFyID09IDIpIHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdEl0ZW1TcGhlcmVbMF0uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgaWYgKGZvcm1DaGFyID09IDMpIHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdEl0ZW1TcGhlcmVbM10uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgaWYgKGZvcm1DaGFyID09IDQpIHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdEl0ZW1TcGhlcmVbMV0uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL9C+0LHRidCw0Y8g0YTRg9C90LrRhtC40Y8g0YDQsNCx0L7RgtGLINGBINC60Y3RiNC+0Lwg0LTQu9GPINC60L3QvtC/0L7QuiDQuCDRhNC+0YDQvFxyXG4gICAgY29uc3QgZ2V0UHJvcGVydHlJdGVtID0gKCBnZXRBcnIsIGVsZW1lbnRzLCBhZGRDbGFzcywgZW52aXJvbm1lbnQpID0+IHtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgbW9kaWZ5QXJyID0gZ2V0QXJyLnNsaWNlKDAsMSkgKyBnZXRBcnIuc2xpY2UoMiwzKSArIGdldEFyci5zbGljZSg0LDUpICsgZ2V0QXJyLnNsaWNlKDYsNyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggb2YgbW9kaWZ5QXJyKSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnRzLmZvckVhY2goKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpZiAoK2luZGV4ID09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50c1syXS5jbGFzc0xpc3QuYWRkKGFkZENsYXNzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgraW5kZXggPT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzWzBdLmNsYXNzTGlzdC5hZGQoYWRkQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCtpbmRleCA9PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudHNbM10uY2xhc3NMaXN0LmFkZChhZGRDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoK2luZGV4ID09IDQpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50c1sxXS5jbGFzc0xpc3QuYWRkKGFkZENsYXNzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChlbnZpcm9ubWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzWzBdLnN0eWxlLm1hcmdpblJpZ2h0ID0gJzQwcHgnO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzWzFdLnN0eWxlLm1hcmdpblJpZ2h0ID0gJzQwcHgnO1xyXG4gICAgICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9ICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICAvL9C/0L7Qu9GD0YfQtdC90LjQtSDQstC10YLQvtC6INC40Lcg0JrRjdGI0LBcclxuICAgIGNvbnN0IGdldEJyYW5jaCA9IChnZXRBcnIpID0+IHtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgb3B0aW9uQXJyID0gZ2V0QXJyLnNsaWNlKDEsMikgKyBnZXRBcnIuc2xpY2UoMyw0KSArIGdldEFyci5zbGljZSg1LDYpICsgZ2V0QXJyLnNsaWNlKDcsOCk7XHJcbiAgICAgICAgbGV0IGZvcm1BcnIgPSBnZXRBcnIuc2xpY2UoMCwxKSArIGdldEFyci5zbGljZSgyLDMpICsgZ2V0QXJyLnNsaWNlKDQsNSkgKyBnZXRBcnIuc2xpY2UoNiw3KTtcclxuICAgICAgICBsZXQgayA9IC0xO1xyXG5cclxuICAgICAgIGZvciAobGV0IGluZGV4IG9mIG9wdGlvbkFycikge1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNyb3duQnJhbmNoLmZvckVhY2goKGl0ZW0sIGkpID0+IHtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKE51bWJlcihpbmRleCkgID09PSArK2kgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaysrO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLnRyZWUtc3BoZXJlLS1mb3JtLSR7K2Zvcm1BcnJba119YCk7ICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBzaG93QnJhbmNoKGZvcm0sIGZvcm1BcnJba10sIG9wdGlvbkFycltrXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd1Rlc3Qob3B0aW9uQXJyW2tdLCBmb3JtQXJyW2tdLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSkgXHJcbiAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICAvL9C30LDQs9GA0YPQt9C60LAg0LjQtyDQutGN0YjQsFxyXG4gICAgIGNvbnN0IHJlbmRlciA9ICgpID0+IHtcclxuXHJcbiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5oYXNPd25Qcm9wZXJ0eSgnY3Jvd25Db250ZW50JykpIHtcclxuICAgICAgICAgICAgcm9vdExpc3RzLmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXlOb25lJyk7XHJcbiAgICAgICAgICAgIGNyb3duQ29udGVudC5jbGFzc0xpc3QuYWRkKCd0cmVlLS1jcm93bi0tZmxleC1hY3RpdmUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn0YLQsNC60L7Qs9C+INGB0LLQvtC50YHRgtCy0LAg0L3QtdGCJyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuaGFzT3duUHJvcGVydHkoJ2JyYW5jaEFycicpKSB7XHJcbiAgICAgICAgICAgIGxldCBicmFuY2hBcnIgPSBTdHJpbmcoSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYnJhbmNoQXJyJykpKTtcclxuICAgICAgICAgICAgZ2V0UHJvcGVydHlJdGVtKGJyYW5jaEFyciwgY2hvb3NlU3BoZXJlQnRuLCAnZGlzcGxheU5vbmUnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGdldFByb3BlcnR5SXRlbShicmFuY2hBcnIsIHNwaGVyZUZvcm0sICdkaXNwbGF5RmxleCcsIHRydWUpO1xyXG4gICAgICAgICAgICBnZXRCcmFuY2goYnJhbmNoQXJyKTtcclxuICAgICAgICAgICAgZGlzYWJsZVNwaGVyZShicmFuY2hBcnIpO1xyXG4gICAgICAgIH0gIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn0YLQsNC60L7Qs9C+INGB0LLQvtC50YHRgtCy0LAg0L3QtdGCJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSAgIFxyXG5cclxuICAgIHJlbmRlcigpO1xyXG5cclxuICAgIC8v0YHRgtC40LvQuNC30LDRhtC40Y8g0YfQtdGC0L3Ri9GFINC4INC90LXRh9C10YLQvdGL0YUg0YTQvtGA0LxcclxuICAgc2VsZWN0SXRlbVNwaGVyZS5mb3JFYWNoKChpdGVtLCBpKSA9PiB7XHJcbiAgICAgICAgaWYoaXRlbS5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQubWF0Y2hlcyhcIi50cmVlLS1jcm93bi0taXRlbS1sZWZ0XCIpKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uc3R5bGUuYm9yZGVyUmlnaHQgPSAnMjBweCBzb2xpZCAjNUVBMkZGJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpdGVtLnN0eWxlLmJvcmRlckxlZnQgPSAnMjBweCBzb2xpZCAjNUVBMkZGJztcclxuICAgICAgICAgICAgaXRlbS5kaXIgPSAncnRsJztcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvL9GB0YLQuNC70LjQt9Cw0YbQuNGPINC60L3QvtC/0L7QulxyXG4gICAgY2hvb3NlU3BoZXJlQnRuLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICBpZihpdGVtLnBhcmVudEVsZW1lbnQubWF0Y2hlcyhcIi50cmVlLS1jcm93bi0taXRlbS1sZWZ0XCIpKSB7XHJcbiAgICAgICAgICAgIGl0ZW0uc3R5bGUubWFyZ2luUmlnaHQgPSAnNDBweCc7XHJcbiAgICAgICAgICAgIGl0ZW0uc3R5bGUubWFyZ2luTGVmdCA9ICcwcHgnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGl0ZW0uc3R5bGUubWFyZ2luTGVmdCA9ICc0MHB4JztcclxuICAgICAgICAgICAgaXRlbS5zdHlsZS5tYXJnaW5SaWdodCA9ICcwcHgnO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8v0LTQtdC70LXQs9C40YDQvtCy0LDQsNC90L3QvtC1INGB0L7QsdGL0YLQuNC1INC90LAg0LTQtdGA0LXQstC+XHJcbiAgICB0cmVlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcblxyXG4gICAgICAgIGxldCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy/Qv9C+0LrQsNC3INC60YDQvtC90YtcclxuICAgICAgICBpZiAodGFyZ2V0ID09IHJvb3RMaXN0cykge1xyXG4gICAgICAgICAgICByb290TGlzdHMuY2xhc3NMaXN0LmFkZCgnZGlzcGxheU5vbmUnKTtcclxuICAgICAgICAgICAgY3Jvd25Db250ZW50LmNsYXNzTGlzdC5hZGQoJ3RyZWUtLWNyb3duLS1mbGV4LWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2UuY3Jvd25Db250ZW50ID0gJ3Nob3cnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAvL9C/0L7QutCw0Lcg0YTQvtGA0LzRiyDQstGL0LHQvtGA0LAg0YHRhNC10YDRiyDRgNCw0LfQstC40YLQuNGPXHJcbiAgICAgICAgaWYgKHRhcmdldC5tYXRjaGVzKCcudHJlZS0tY3Jvd24tLWl0ZW0tLWJ0bicpKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjaG9vc2VTcGhlcmVCdG4uZm9yRWFjaCggKGVsZW0sIGl0ZW0pID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoZWxlbSA9PSB0YXJnZXQpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZm9ybTJDbGFzc1ZhbHVlID0gZWxlbS5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtMkluZGV4ID0gcGFyc2VJbnQoZm9ybTJDbGFzc1ZhbHVlLnJlcGxhY2UoL1xcRCsvZyxcIlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgZWxlbS5jbGFzc0xpc3QuYWRkKCdkaXNwbGF5Tm9uZScpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbS5uZXh0RWxlbWVudFNpYmxpbmcucGFyZW50RWxlbWVudC5tYXRjaGVzKCcudHJlZS0tY3Jvd24tLWl0ZW0tcmlnaHQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtLm5leHRFbGVtZW50U2libGluZy5zdHlsZS5tYXJnaW5MZWZ0ID0gJzQwcHgnO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSAgZWxlbS5uZXh0RWxlbWVudFNpYmxpbmcuc3R5bGUubWFyZ2luUmlnaHQgPSAnNDBweCc7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGVsZW0ubmV4dEVsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXlGbGV4Jyk7IFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8v0L/QvtC60LDQtyDQvdGD0LbQvdC+0Lkg0LLQtdGC0LrQuFxyXG4gICAgICAgIGlmKHRhcmdldC5tYXRjaGVzKCcudHJlZS1jcm93bi1zcGhlcmUnKSkge1xyXG5cclxuICAgICAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHsgXHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGluZGV4U2VsZWN0ZWQgPSB0YXJnZXQuc2VsZWN0ZWRJbmRleCxcclxuICAgICAgICAgICAgICAgICAgICBmb3JtQ2xhc3NWYWx1ZSA9IHRhcmdldC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICBmb3JtSW5kZXggPSBwYXJzZUludChmb3JtQ2xhc3NWYWx1ZS5yZXBsYWNlKC9cXEQrL2csXCJcIikpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8v0L/QvtC60LDQtyDQvdGD0LbQvdC+0Lkg0LLQtdGC0LrQuCDRgSDRg9GA0L7QutCw0LzQuCBcclxuICAgICAgICAgICAgICAgIHNob3dCcmFuY2godGFyZ2V0LnBhcmVudEVsZW1lbnQsIGZvcm1JbmRleCwgaW5kZXhTZWxlY3RlZCk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy/QtNC+0LHQsNCy0LvQtdC90LjQtSDQstC10YLQutC4INCyINC60Y3RiFxyXG4gICAgICAgICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5oYXNPd25Qcm9wZXJ0eSgnYnJhbmNoQXJyJykpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYnJhbmNoQXJyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2JyYW5jaEFycicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyYW5jaEFyciA9IGJyYW5jaEFyciArIGZvcm1JbmRleCArIFwiXCIgKyBpbmRleFNlbGVjdGVkO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyYW5jaEFycj0gYnJhbmNoQXJyLnJlcGxhY2UoL1xcXFwrL2dpLFwiXCIpLnJlcGxhY2UoL1xcXCIrL2dpLFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5icmFuY2hBcnIgPSBKU09OLnN0cmluZ2lmeShicmFuY2hBcnIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYnJhbmNoQXJyO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyYW5jaEFyciA9IGZvcm1JbmRleCArIFwiXCIgKyBpbmRleFNlbGVjdGVkO1xyXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5icmFuY2hBcnIgPSBKU09OLnN0cmluZ2lmeShicmFuY2hBcnIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgLy/Qv9C+0LrQsNC3INC90YPQttC90L7Qs9C+INGC0LXRgdGC0LAg0L/QvtGB0LvQtSDQvtGC0LLQtdGC0LAg0YHQtdGA0LLQtdGA0LAg0LIg0LHRg9C00YPRidC10LxcclxuICAgICAgICAgICAgICAgICBsZXQgc3BoZXJlU3RhdHVzID0gdHJ1ZTsgLy/RgdC+0YHRgtC+0Y/QvdC40LUg0L/RgNC+0YXQvtC20LTQtdC90LjRjyDRgdGE0LXRgNGLINC4INCy0YHQtdGFINGD0YDQvtC60L7QslxyXG5cclxuICAgICAgICAgICAgICAgICBzaG93VGVzdChmb3JtSW5kZXgsaW5kZXhTZWxlY3RlZCxzcGhlcmVTdGF0dXMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAvL9Cy0YvQt9C+0LIg0YTRg9C90LrRhtC40Lgg0LHQu9C+0LrQuNGA0L7QstC60Lgg0LLRi9Cx0YDQsNC90L3QvtC5INGB0YTQtdGA0YtcclxuICAgICAgICAgICAgICAgICBsZXQgYnJhbmNoQXJyID0gU3RyaW5nKEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2JyYW5jaEFycicpKSk7XHJcbiAgICAgICAgICAgICAgICAgZGlzYWJsZVNwaGVyZShicmFuY2hBcnIpO1xyXG5cclxuICAgICAgICAgICAgICAgICB0YXJnZXQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpOyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG59OyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJvbmxvYWQiLCJ0cmVlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicm9vdExpc3RzIiwiY3Jvd25Db250ZW50IiwiY2hvb3NlU3BoZXJlQnRuIiwicXVlcnlTZWxlY3RvckFsbCIsInNwaGVyZUZvcm0iLCJjcm93bkJyYW5jaCIsImNyb3duVGVzdHMiLCJjbGVhciIsInNlbGVjdEl0ZW1TcGhlcmUiLCJsZXNzb25zT2JqIiwiMSIsIjIiLCIzIiwiNCIsIjUiLCI2IiwibGVzc29uc0xpbmtzT2JqIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxvY2F0aW9uIiwicmVsb2FkIiwibG9jYWxTdG9yYWdlIiwic2hvd0JyYW5jaCIsImZvcm1JdGVtIiwiZm9ybUluZGV4Iiwic3BoZXJlSW5kZXgiLCJsZXNzb25Db3VudCIsImNvdW50ZXIiLCJrIiwiaSIsImxlc3NvbkNvdW50ZXIiLCJmb3JFYWNoIiwiaXRlbSIsImJyYW5jaENsYXNzIiwiY2xhc3NMaXN0IiwidmFsdWUiLCJsZW5ndGgiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJicmFuY2giLCJwYXJlbnRFbGVtZW50IiwiYnJhbmNoTGVzc29ucyIsInN0eWxlIiwidHJhbnNmb3JtIiwic2hvd1Rlc3QiLCJzdGF0dXMiLCJ0ZXN0VHh0IiwibGFzdEVsZW1lbnRDaGlsZCIsInRleHRDb250ZW50Iiwic2V0QXR0cmlidXRlIiwicmVtb3ZlIiwiZGlzYWJsZVNwaGVyZSIsImZvcm1DaGFyIiwib3B0aW9uQXJyIiwiZ2V0QXJyIiwic2xpY2UiLCJsIiwib3B0aW9uQ2hhciIsInNwaGVyZVNlbGVjdCIsIm9wdGlvbiIsImNob3Nlbk9wdGlvbiIsImdldFByb3BlcnR5SXRlbSIsImVsZW1lbnRzIiwiYWRkQ2xhc3MiLCJlbnZpcm9ubWVudCIsImluZGV4IiwiYWRkIiwibWFyZ2luUmlnaHQiLCJicmFuY2hBcnIiLCJoYXNPd25Qcm9wZXJ0eSIsIlN0cmluZyIsIkpTT04iLCJwYXJzZSIsImdldEl0ZW0iLCJmb3JtQXJyIiwiTnVtYmVyIiwiZm9ybSIsImdldEJyYW5jaCIsImNvbnNvbGUiLCJsb2ciLCJtYXRjaGVzIiwiYm9yZGVyUmlnaHQiLCJib3JkZXJMZWZ0IiwiZGlyIiwibWFyZ2luTGVmdCIsInRhcmdldCIsImV2ZW50IiwiZWxlbSIsImZvcm0yQ2xhc3NWYWx1ZSIsIm5leHRFbGVtZW50U2libGluZyIsInBhcnNlSW50IiwicmVwbGFjZSIsImluZGV4U2VsZWN0ZWQiLCJzZWxlY3RlZEluZGV4IiwiZm9ybUNsYXNzVmFsdWUiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiJhQWNBQSxPQUFPQyxPQUFTLFdBQ1osTUFBTUMsRUFBT0MsU0FBU0MsY0FBYyxvQkFDaENDLEVBQVlGLFNBQVNDLGNBQWMsc0JBQ25DRSxFQUFlSCxTQUFTQyxjQUFjLHNCQUV0Q0csR0FEWUosU0FBU0ssaUJBQWlCLHNCQUNwQkwsU0FBU0ssaUJBQWlCLDRCQUM1Q0MsRUFBYU4sU0FBU0ssaUJBQWlCLHNCQUN2Q0UsRUFBY1AsU0FBU0ssaUJBQWlCLDhCQUN4Q0csRUFBYVIsU0FBU0ssaUJBQWlCLDRCQUN2Q0ksRUFBUVQsU0FBU0MsY0FBYyxVQUNoQ1MsRUFBbUJWLFNBQVNLLGlCQUFpQixzQkFFaEQsSUFBSU0sRUFBYSxDQUNiQyxFQUFHLENBQ0NBLEVBQUcsaUJBQ0hDLEVBQUcsZUFDSEMsRUFBRyxpQkFDSEMsRUFBRyxZQUNIQyxFQUFHLGNBRVBILEVBQUcsQ0FDQ0QsRUFBRyxRQUNIQyxFQUFHLGtCQUNIQyxFQUFHLDJCQUNIQyxFQUFHLFdBQ0hDLEVBQUcsdUJBQ0hDLEVBQUcsaUJBRVBILEVBQUcsQ0FDQ0YsRUFBRyxxQkFDSEMsRUFBRyxl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
